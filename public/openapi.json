{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0",
    "description": "## Documentation of the routes and methods to manage users, stations (also called boxes or senseBoxes), and measurements in the openSenseMap API. You can find the API running at [https://opensensemap.org/api/](https://opensensemap.org/api/).\n# Timestamps\n\n## Please note that the API handles every timestamp in Coordinated universal time (UTC) time zone. Timestamps in parameters should be in RFC 3339 notation.\n\n**Timestamp without Milliseconds:**\n\n```\n2018-02-01T23:18:02Z\n```\n\n**Timestamp with Milliseconds:**\n\n```\n2018-02-01T23:18:02.412Z\n```\n\n# IDs\n\n## All stations and sensors of stations receive a unique public identifier. These identifiers are exactly 24 character long and only contain digits and characters a to f.\n\n**Example:**\n\n```\n5a8d1c25bc2d41001927a265\n```\n\n# Parameters\n\n## Only if noted otherwise, all requests assume the payload encoded as JSON with `Content-type: application/json` header. Parameters prepended with a colon (`:`) are parameters which should be specified through the URL.\n\n# Source code and Licenses\n\n## You can find the whole source code of the API at GitHub in the [sensebox/openSenseMap-API](https://github.com/sensebox/openSenseMap-API) repository. You can obtain the code under the MIT License.\n\n## The data obtainable through the openSenseMap API at [https://opensensemap.org/api/](https://opensensemap.org/api/) is licensed under the [Public Domain Dedication and License 1.0](https://opendatacommons.org/licenses/pddl/summary/).\n\n## If there is something unclear or there is a mistake in this documentation please open an [issue](https://github.com/openSenseMap/frontend/issues/new) in the GitHub repository."
  },
  "servers": [
    {
      "url": "https://opensensemap.org/api",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "schemas": {
      "SenseBoxId": {
        "type": "string",
        "pattern": "^[a-f0-9]{24}$",
        "description": "Unique identifier for stations and sensors (24 characters, digits and a-f only)",
        "example": "5a8d1c25bc2d41001927a265"
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time",
        "description": "RFC 3339 timestamp in UTC timezone",
        "examples": [
          "2018-02-01T23:18:02Z",
          "2018-02-01T23:18:02.412Z"
        ]
      },
      "Sensor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the sensor",
            "example": "sensor-1"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name of the sensor",
            "example": "Temperature Sensor"
          },
          "type": {
            "type": "string",
            "description": "Type of sensor",
            "example": "temperature"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Measurement": {
        "type": "object",
        "required": [
          "sensorId",
          "time",
          "value"
        ],
        "properties": {
          "sensorId": {
            "type": "string",
            "description": "Unique identifier for the sensor",
            "example": "sensor-123"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the measurement",
            "example": "2023-05-15T10:00:00Z"
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "Measured value",
            "example": 25.4
          }
        }
      }
    },
    "parameters": {
      "SenseBoxIdParam": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SenseBoxId"
        },
        "description": "SenseBox ID parameter"
      },
      "TimestampParam": {
        "name": "timestamp",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/Timestamp"
        },
        "description": "Timestamp parameter in RFC 3339 format (UTC)"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request - Invalid parameters or payload",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request parameters"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Resource not found"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/api/getsensors": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "summary": "Get sensors by device ID",
        "description": "Returns a list of sensors associated with the specified device ID",
        "parameters": [
          {
            "in": "query",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the device to fetch sensors for",
            "example": "device-123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sensor"
                  }
                },
                "example": [
                  {
                    "id": "sensor-1",
                    "name": "Temperature Sensor",
                    "type": "temperature"
                  },
                  {
                    "id": "sensor-2",
                    "name": "Humidity Sensor",
                    "type": "humidity"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request - deviceId parameter is missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "deviceId is required"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Failed to fetch sensors"
                }
              }
            }
          }
        }
      }
    },
    "/api/measurements": {
      "post": {
        "tags": [
          "Measurements"
        ],
        "summary": "Create new measurements",
        "description": "Accepts an array of measurement data and stores it in the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Measurement"
                },
                "example": [
                  {
                    "sensorId": "sensor-123",
                    "time": "2023-05-15T10:00:00Z",
                    "value": 25.4
                  },
                  {
                    "sensorId": "sensor-456",
                    "time": "2023-05-15T10:01:00Z",
                    "value": 22.1
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Measurements successfully stored",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Measurements successfully stored"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid data format"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Method not allowed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}